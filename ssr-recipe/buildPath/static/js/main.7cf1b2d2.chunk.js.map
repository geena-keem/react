{"version":3,"sources":["modules/users.js","App.js","components/Menu.js","reportWebVitals.js","modules/index.js","index.js"],"names":["getUserSaga","usersSaga","GET_USERS_PENDING","GET_USERS_SUCCESS","GET_USERS_FAILURE","GET_USER","GET_USER_SUCCESS","GET_USER_FAILURE","getUsersFailure","payload","type","error","getUser","id","getUsers","dispatch","a","axios","get","response","getUserById","action","call","put","data","takeEvery","initialState","users","user","loading","state","RedPage","loadable","BluePage","UsersPage","App","path","component","Menu","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootSaga","all","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","window","__PRELOADED_STATE__","applyMiddleware","thunk","run","Root","root","document","getElementById","loadableReady","ReactDOM","hydrate"],"mappings":"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","file":"static/js/main.7cf1b2d2.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { call, put, takeEvery } from 'redux-saga/effects';\r\n\r\nconst GET_USERS_PENDING = 'users/GET_USERS_PENDING';\r\nconst GET_USERS_SUCCESS = 'users/GET_USERS_SUCCESS';\r\nconst GET_USERS_FAILURE = 'users/GET_USERS_FAILURE';\r\n\r\nconst GET_USER = 'users/GET_USER';\r\nconst GET_USER_SUCCESS = 'users/GET_USER_SUCCESS';\r\nconst GET_USER_FAILURE = 'users/GET_USER_FAILURE';\r\n\r\nconst getUsersPending = () => ({ type: GET_USERS_PENDING });\r\nconst getUsersSuccess = (payload) => ({ type: GET_USERS_SUCCESS, payload });\r\nconst getUsersFailure = (payload) => ({\r\n  type: GET_USERS_FAILURE,\r\n  error: true,\r\n  payload,\r\n});\r\n\r\nexport const getUser = (id) => ({ type: GET_USER, payload: id });\r\nconst getUserSuccess = (data) => ({ type: GET_USER_SUCCESS, payload: data });\r\nconst getUserFailure = (error) => ({\r\n  type: GET_USER_FAILURE,\r\n  payload: error,\r\n  error: true,\r\n});\r\n\r\nexport const getUsers = () => async (dispatch) => {\r\n  try {\r\n    dispatch(getUsersPending());\r\n    const response = await axios.get(\r\n      'https://jsonplaceholder.typicode.com/users',\r\n    );\r\n    dispatch(getUsersSuccess(response));\r\n  } catch (e) {\r\n    dispatch(getUsersFailure(e));\r\n    throw e;\r\n  }\r\n};\r\n\r\nconst getUserById = (id) =>\r\n  axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\nfunction* getUserSaga(action) {\r\n  try {\r\n    const response = yield call(getUserById, action.payload);\r\n    yield put(getUserSuccess(response.data));\r\n  } catch (e) {\r\n    yield put(getUserFailure(e));\r\n  }\r\n}\r\n\r\nexport function* usersSaga() {\r\n  yield takeEvery(GET_USER, getUserSaga);\r\n}\r\n\r\nconst initialState = {\r\n  users: null,\r\n  user: null,\r\n  loading: {\r\n    users: false,\r\n    user: false,\r\n  },\r\n  error: {\r\n    users: null,\r\n    user: null,\r\n  },\r\n};\r\n\r\nfunction users(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_USERS_PENDING:\r\n      return {\r\n        ...state,\r\n        loading: { ...state.loading, users: true },\r\n        error: { ...state.error, users: null },\r\n      };\r\n    case GET_USERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: { ...state.loading, users: false },\r\n        users: action.payload.data,\r\n      };\r\n    case GET_USERS_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: { ...state.loading, users: false },\r\n        error: { ...state.error, users: action.payload },\r\n      };\r\n    case GET_USER:\r\n      return {\r\n        ...state,\r\n        loading: { ...state.loading, user: true },\r\n        error: { ...state.error, user: null },\r\n      };\r\n    case GET_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: { ...state.loading, user: false },\r\n        user: action.payload,\r\n      };\r\n    case GET_USER_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: { ...state.loading, user: false },\r\n        error: { ...state.error, user: action.payload },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default users;\r\n","import React from 'react';\nimport { Route } from 'react-router';\nimport Menu from './components/Menu';\nimport loadable from '@loadable/component';\n\nconst RedPage = loadable(() => import('./pages/RedPage'));\nconst BluePage = loadable(() => import('./pages/BluePage'));\nconst UsersPage = loadable(() => import('./pages/UsersPage'));\n\nconst App = () => {\n  return (\n    <div>\n      <Menu />\n      <hr />\n      <Route path=\"/red\" component={RedPage} />\n      <Route path=\"/blue\" component={BluePage} />\n      <Route path=\"/users\" component={UsersPage} />\n      <hr />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Menu = () => {\r\n  return (\r\n    <ul>\r\n      <li>\r\n        <Link to=\"/red\">RED</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/blue\">BLUE</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/users\">USERS</Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { all } from 'redux-saga/effects';\r\nimport { combineReducers } from 'redux';\r\nimport users, { usersSaga } from './users';\r\n\r\nexport function* rootSaga() {\r\n  yield all([usersSaga()]);\r\n}\r\n\r\nconst rootReducer = combineReducers({ users });\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { applyMiddleware, createStore } from 'redux';\nimport rootReducer, { rootSaga } from './modules';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { loadableReady } from '@loadable/component';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  window.__PRELOADED_STATE__, // 이 값을 초기 상태로 사용한다.\n  applyMiddleware(thunk, sagaMiddleware),\n);\nsagaMiddleware.run(rootSaga);\n\nconst Root = () => {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  );\n};\n\nconst root = document.getElementById('root');\n\n// 프로덕션 환경에서는 loadableReady와 hydrate를 사용하고\n// 개발 환경에서는 기존 방식으로 처리\nif (process.env.NODE_ENV === 'production') {\n  loadableReady(() => {\n    ReactDOM.hydrate(<Root />, root);\n  });\n} else {\n  ReactDOM.render(<Root />, root);\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}